/*

Welcome to the solutions to the Groovy Playground exercise! You can run these
tasks by telling Gradle to use this build script, instead of the default
build.gradle. To run the task below, use:

    $ gradle -b solution.gradle stringsAndTypes

or, more compactly

    $ gradle -b solution.gradle sAT

*/

task stringsAndTypes {
    doLast {
        // TODO: Run `$ gradle sAT`
        println "Nice work abbreviating the task name"

        // TODO: Create a variable named foo and assign it the value 4.2
        def foo=4.2

        // TODO: Print the value and class of foo
        println foo+" "+foo.class

        // TODO: Use string interpolation to print the square root of 127
        // HINT: http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html
        println Math.sqrt(127)

        // TODO: Assign the current date to foo and print it, along with its type
        // HINT:
        // http://docs.oracle.com/javase/7/docs/api/java/util/package-summary.html
        Date d1=new Date();
        foo= d1.getDate();
        println foo+" "+foo.class

        // TODO: Use the `substring` method to extract my name from this string
        def hello = "Hello, Jeremy."
        def sub=hello.substring(hello.indexOf(',')+1,hello.indexOf('.'));
        println sub
        // TODO: Use `toUpperCase` to capitalize and print my name
	println sub.toUpperCase();
    }
}


task closures {
    doLast {
        // TODO: Declare a closure that takes two arguments and adds them together
        // HINT: http://www.groovy-lang.org/closures.html
        def add={a,b->a+b}

        // TODO: Call your closure with arguments 17 and 25, and print the result
        println add(17,25)
        // Beware that something like `println addTwo 17, 25` is ambiguous

    }
}

task lists {
    doLast {
        // TODO: Declare a list containing 5 of your favorite candies
        // HINT: Try searching for "groovy list literal"
	def lcandies=["jellybean","eclair","frocher","gulabj","rosgul"]
        // TODO: Create a new list of your candies in all caps
        // HINT: http://mrhaki.blogspot.ca/2010/05/groovy-goodness-use-collect-with.html
        def Ccandies;
        def makeCaps={i->println i.toUpperCase()}
        lcandies.each(makeCaps);

        // TODO: Print each capital candy

    }
}
